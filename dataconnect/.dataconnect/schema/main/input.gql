"""
✨ `AuditLog_KeyOutput` returns the primary key fields of table type `AuditLog`.

It has the same format as `AuditLog_Key`, but is only used as mutation return value.
"""
scalar AuditLog_KeyOutput
"""
✨ `Conversation_KeyOutput` returns the primary key fields of table type `Conversation`.

It has the same format as `Conversation_Key`, but is only used as mutation return value.
"""
scalar Conversation_KeyOutput
"""
✨ Generated data input type for table 'AuditLog'. It includes all necessary fields for creating or upserting rows into table.
"""
input AuditLog_Data {
  """
  ✨ Generated from Field `AuditLog`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `AuditLog`.`id` of type `String!`)
  """
  id_expr: String_Expr
  """
  ✨ Generated from Field `AuditLog`.`action` of type `String!`
  """
  action: String
  """
  ✨ `_expr` server value variant of `action` (✨ Generated from Field `AuditLog`.`action` of type `String!`)
  """
  action_expr: String_Expr
  """
  ✨ Generated from Field `AuditLog`.`details` of type `String`
  """
  details: String
  """
  ✨ `_expr` server value variant of `details` (✨ Generated from Field `AuditLog`.`details` of type `String`)
  """
  details_expr: String_Expr
  """
  ✨ Generated from Field `AuditLog`.`ipAddress` of type `String`
  """
  ipAddress: String
  """
  ✨ `_expr` server value variant of `ipAddress` (✨ Generated from Field `AuditLog`.`ipAddress` of type `String`)
  """
  ipAddress_expr: String_Expr
  """
  ✨ Generated from Field `AuditLog`.`severity` of type `String!`
  """
  severity: String
  """
  ✨ `_expr` server value variant of `severity` (✨ Generated from Field `AuditLog`.`severity` of type `String!`)
  """
  severity_expr: String_Expr
  """
  ✨ Generated from Field `AuditLog`.`timestamp` of type `Timestamp!`
  """
  timestamp: Timestamp
  """
  ✨ `_expr` server value variant of `timestamp` (✨ Generated from Field `AuditLog`.`timestamp` of type `Timestamp!`)
  """
  timestamp_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `timestamp` (✨ Generated from Field `AuditLog`.`timestamp` of type `Timestamp!`)
  """
  timestamp_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `timestamp` (✨ Generated from Field `AuditLog`.`timestamp` of type `Timestamp!`)
  """
  timestamp_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `AuditLog`.`userAgent` of type `String`
  """
  userAgent: String
  """
  ✨ `_expr` server value variant of `userAgent` (✨ Generated from Field `AuditLog`.`userAgent` of type `String`)
  """
  userAgent_expr: String_Expr
  """
  ✨ Generated from Field `AuditLog`.`userId` of type `String`
  """
  userId: String
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `AuditLog`.`userId` of type `String`)
  """
  userId_expr: String_Expr
}
"""
✨ Generated filter input type for table 'AuditLog'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input AuditLog_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [AuditLog_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: AuditLog_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [AuditLog_Filter!]
  """
  ✨ Generated from Field `AuditLog`.`id` of type `String!`
  """
  id: String_Filter
  """
  ✨ Generated from Field `AuditLog`.`action` of type `String!`
  """
  action: String_Filter
  """
  ✨ Generated from Field `AuditLog`.`details` of type `String`
  """
  details: String_Filter
  """
  ✨ Generated from Field `AuditLog`.`ipAddress` of type `String`
  """
  ipAddress: String_Filter
  """
  ✨ Generated from Field `AuditLog`.`severity` of type `String!`
  """
  severity: String_Filter
  """
  ✨ Generated from Field `AuditLog`.`timestamp` of type `Timestamp!`
  """
  timestamp: Timestamp_Filter
  """
  ✨ Generated from Field `AuditLog`.`userAgent` of type `String`
  """
  userAgent: String_Filter
  """
  ✨ Generated from Field `AuditLog`.`userId` of type `String`
  """
  userId: String_Filter
}
"""
✨ Generated first-row input type for table 'AuditLog'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input AuditLog_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [AuditLog_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: AuditLog_Filter
}
"""
✨ Generated having input type for table 'AuditLog'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input AuditLog_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [AuditLog_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: AuditLog_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [AuditLog_Having!]
  """
  ✨ Generated from Field `AuditLog`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `AuditLog`.`action_count` of type `Int!`
  """
  action_count: Int_Filter
  """
  ✨ Generated from Field `AuditLog`.`details_count` of type `Int!`
  """
  details_count: Int_Filter
  """
  ✨ Generated from Field `AuditLog`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `AuditLog`.`ipAddress_count` of type `Int!`
  """
  ipAddress_count: Int_Filter
  """
  ✨ Generated from Field `AuditLog`.`severity_count` of type `Int!`
  """
  severity_count: Int_Filter
  """
  ✨ Generated from Field `AuditLog`.`timestamp_count` of type `Int!`
  """
  timestamp_count: Int_Filter
  """
  ✨ Generated from Field `AuditLog`.`userAgent_count` of type `Int!`
  """
  userAgent_count: Int_Filter
  """
  ✨ Generated from Field `AuditLog`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `AuditLog`.`timestamp_min` of type `Timestamp`
  """
  timestamp_min: Timestamp_Filter
  """
  ✨ Generated from Field `AuditLog`.`timestamp_max` of type `Timestamp`
  """
  timestamp_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'AuditLog'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input AuditLog_Key {
  """
  ✨ Generated from Field `AuditLog`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `AuditLog`.`id` of type `String!`)
  """
  id_expr: String_Expr
}
"""
✨ Generated list filter input type for table 'AuditLog'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input AuditLog_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: AuditLog_Filter
}
"""
✨ Generated order input type for table 'AuditLog'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input AuditLog_Order {
  """
  ✨ Generated from Field `AuditLog`.`id` of type `String!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `AuditLog`.`action` of type `String!`
  """
  action: OrderDirection
  """
  ✨ Generated from Field `AuditLog`.`details` of type `String`
  """
  details: OrderDirection
  """
  ✨ Generated from Field `AuditLog`.`ipAddress` of type `String`
  """
  ipAddress: OrderDirection
  """
  ✨ Generated from Field `AuditLog`.`severity` of type `String!`
  """
  severity: OrderDirection
  """
  ✨ Generated from Field `AuditLog`.`timestamp` of type `Timestamp!`
  """
  timestamp: OrderDirection
  """
  ✨ Generated from Field `AuditLog`.`userAgent` of type `String`
  """
  userAgent: OrderDirection
  """
  ✨ Generated from Field `AuditLog`.`userId` of type `String`
  """
  userId: OrderDirection
}
"""
✨ Generated data input type for table 'Conversation'. It includes all necessary fields for creating or upserting rows into table.
"""
input Conversation_Data {
  """
  ✨ Generated from Field `Conversation`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Conversation`.`id` of type `String!`)
  """
  id_expr: String_Expr
  """
  ✨ Generated from Field `Conversation`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Conversation`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Conversation`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Conversation`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Conversation`.`isBot` of type `Boolean!`
  """
  isBot: Boolean
  """
  ✨ `_expr` server value variant of `isBot` (✨ Generated from Field `Conversation`.`isBot` of type `Boolean!`)
  """
  isBot_expr: Boolean_Expr
  """
  ✨ Generated from Field `Conversation`.`message` of type `String!`
  """
  message: String
  """
  ✨ `_expr` server value variant of `message` (✨ Generated from Field `Conversation`.`message` of type `String!`)
  """
  message_expr: String_Expr
  """
  ✨ Generated from Field `Conversation`.`response` of type `String!`
  """
  response: String
  """
  ✨ `_expr` server value variant of `response` (✨ Generated from Field `Conversation`.`response` of type `String!`)
  """
  response_expr: String_Expr
  """
  ✨ Generated from Field `Conversation`.`sessionId` of type `String!`
  """
  sessionId: String
  """
  ✨ `_expr` server value variant of `sessionId` (✨ Generated from Field `Conversation`.`sessionId` of type `String!`)
  """
  sessionId_expr: String_Expr
  """
  ✨ Generated from Field `Conversation`.`userId` of type `String!`
  """
  userId: String
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `Conversation`.`userId` of type `String!`)
  """
  userId_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Conversation'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Conversation_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Conversation_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Conversation_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Conversation_Filter!]
  """
  ✨ Generated from Field `Conversation`.`id` of type `String!`
  """
  id: String_Filter
  """
  ✨ Generated from Field `Conversation`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Conversation`.`isBot` of type `Boolean!`
  """
  isBot: Boolean_Filter
  """
  ✨ Generated from Field `Conversation`.`message` of type `String!`
  """
  message: String_Filter
  """
  ✨ Generated from Field `Conversation`.`response` of type `String!`
  """
  response: String_Filter
  """
  ✨ Generated from Field `Conversation`.`sessionId` of type `String!`
  """
  sessionId: String_Filter
  """
  ✨ Generated from Field `Conversation`.`userId` of type `String!`
  """
  userId: String_Filter
}
"""
✨ Generated first-row input type for table 'Conversation'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Conversation_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Conversation_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Conversation_Filter
}
"""
✨ Generated having input type for table 'Conversation'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Conversation_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Conversation_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Conversation_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Conversation_Having!]
  """
  ✨ Generated from Field `Conversation`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Conversation`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Conversation`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Conversation`.`isBot_count` of type `Int!`
  """
  isBot_count: Int_Filter
  """
  ✨ Generated from Field `Conversation`.`message_count` of type `Int!`
  """
  message_count: Int_Filter
  """
  ✨ Generated from Field `Conversation`.`response_count` of type `Int!`
  """
  response_count: Int_Filter
  """
  ✨ Generated from Field `Conversation`.`sessionId_count` of type `Int!`
  """
  sessionId_count: Int_Filter
  """
  ✨ Generated from Field `Conversation`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `Conversation`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Conversation`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Conversation'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Conversation_Key {
  """
  ✨ Generated from Field `Conversation`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Conversation`.`id` of type `String!`)
  """
  id_expr: String_Expr
}
"""
✨ Generated list filter input type for table 'Conversation'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Conversation_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Conversation_Filter
}
"""
✨ Generated order input type for table 'Conversation'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Conversation_Order {
  """
  ✨ Generated from Field `Conversation`.`id` of type `String!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Conversation`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Conversation`.`isBot` of type `Boolean!`
  """
  isBot: OrderDirection
  """
  ✨ Generated from Field `Conversation`.`message` of type `String!`
  """
  message: OrderDirection
  """
  ✨ Generated from Field `Conversation`.`response` of type `String!`
  """
  response: OrderDirection
  """
  ✨ Generated from Field `Conversation`.`sessionId` of type `String!`
  """
  sessionId: OrderDirection
  """
  ✨ Generated from Field `Conversation`.`userId` of type `String!`
  """
  userId: OrderDirection
}
